[
  {
    "id": "f2f1fe36.e1788",
    "type": "http request",
    "z": "54686246.278bfc",
    "name": "",
    "method": "use",
    "ret": "obj",
    "url": "",
    "tls": "",
    "x": 879.8049774169922,
    "y": 501.07081031799316,
    "wires": [
      [
        "13244dd5.6b9192"
      ]
    ]
  },
  {
    "id": "676e684e.d4c1c8",
    "type": "function",
    "z": "54686246.278bfc",
    "name": "Get Location ID",
    "func": "LyricCMDmsg ={\n    \"url\":\"https://api.honeywell.com/v1/locations?apikey=\"+context.global.honeywellAPIKey,\n    \"method\": \"GET\",\n    headers:\n    {\n        \"Authorization\":\"Bearer \"+context.global.honeywellLyricAccessToken\n    }\n};\n    \nreturn LyricCMDmsg;\n\n\n//\"url\":\"https://api.honeywell.com/v2/devices/thermostats?apikey=8bFYM0sl5YI7SyYgzz4Qv7IqqBUq19Do&locationId=138889\",",
    "outputs": 1,
    "noerr": 0,
    "x": 695.8015747070312,
    "y": 501.1334228515625,
    "wires": [
      [
        "f2f1fe36.e1788"
      ]
    ]
  },
  {
    "id": "119d74df.76e28b",
    "type": "http request",
    "z": "54686246.278bfc",
    "name": "",
    "method": "use",
    "ret": "obj",
    "url": "",
    "tls": "",
    "x": 658.8605041503906,
    "y": 427.3209390640259,
    "wires": [
      [
        "d9f4ff63.343bd",
        "6741a424.4c2e5c"
      ]
    ]
  },
  {
    "id": "e61c6e12.745d2",
    "type": "function",
    "z": "54686246.278bfc",
    "name": "Request Acess Token",
    "func": "var b = new Buffer(context.global.honeywellAPIKey+\":\"+context.global.honeywellConsumerSecert);\ncontext.global.honeywellOauth2Token = b.toString('base64');\n\nvar LyricCMDmsg ={\n    \"url\":\"https://api.honeywell.com/oauth2/token\",\n    \"method\": \"POST\",\n    headers:\n    {\n        \"Authorization\":context.global.honeywellOauth2Token,\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n    },\n    payload:\n    {\n        \"grant_type\":\"refresh_token\",\n        \"refresh_token\":context.global.honeywellLyricRefreshToken\n    }\n};\n    node.send(LyricCMDmsg);\nreturn; ",
    "outputs": 1,
    "noerr": 0,
    "x": 459.85698318481445,
    "y": 427.3833131790161,
    "wires": [
      [
        "119d74df.76e28b"
      ]
    ]
  },
  {
    "id": "79b5c945.6ba698",
    "type": "inject",
    "z": "54686246.278bfc",
    "name": "Request every 30 sec",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "repeat": "30",
    "crontab": "",
    "once": true,
    "x": 179.0422821044922,
    "y": 426.8270683288574,
    "wires": [
      [
        "e61c6e12.745d2"
      ]
    ]
  },
  {
    "id": "d9f4ff63.343bd",
    "type": "change",
    "z": "54686246.278bfc",
    "name": "Set Access Token",
    "rules": [
      {
        "t": "set",
        "p": "honeywellLyricAccessToken",
        "pt": "global",
        "to": "payload.access_token",
        "tot": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 485.86045837402344,
    "y": 501.3207998275757,
    "wires": [
      [
        "676e684e.d4c1c8"
      ]
    ]
  },
  {
    "id": "a0522e81.f39b5",
    "type": "function",
    "z": "54686246.278bfc",
    "name": "Honeywell Lyric Integration",
    "func": "var honeywellLyric=msg.payload;\n\nif (typeof context.global.winkState.thermostats=='undefined'){ context.global.winkState.thermostats = new Object({}); }\n\nif (Object.prototype.toString.call(honeywellLyric)==='[object Array]'){\n    \n    honeywellLyric.forEach(function (therm) {\n\n        therm.capabilities={\n            fields:[\n                {'field':\"connection\",'type':'boolean'},\n                //{'field':'temperature','type':'float'}, //messes with summary page\n                {'field':'fan','type':'selection','choices':[\"on\",\"off\",\"auto\"]},\n                {'field':'mode','type':'selection', 'choices':[\"heat\",\"off\",\"cool\"]}\n            ]\n        };\n        \n        //node.warn(\"Importing: \"+therm.name+\" thermostat\");\n        \n        LyricTherm ={\n            \"name\":therm.name,\n            \"eco_system\": \"Honeywell Lyric\",\n            \"manufacturer_id\": therm.deviceID,\n            \"device_manufacturer\":\"Honeywell\",\n            \"object_type\": therm.deviceType.toLowerCase(),\n            \"object_id\": therm.deviceID,\n            \"freeboard\": 0,\n            \"desired_state\":{},\n            \"last_reading\": {\n                \"mode\": therm.changeableValues.mode,\n                \"fan_mode\": therm.settings.fan.changeableValues.mode,\n                \"temperature\": therm.indoorTemperature,\n                \"units\":therm.units,\n                \"humidity\": therm.displayedOutdoorHumidity,\n                \"external_temperature\": therm.outdoorTemperature,\n                \"connection\": therm.isProvisioned,\n                \"powered\": therm.operationStatus.mode,\n                \"users_away\":therm.vacationHold.enabled,\n                \"scheduleStatus\":therm.scheduleStatus,\n                \"cool_set_point\": therm.changeableValues.coolSetpoint,\n                \"heat_set_point\": therm.changeableValues.heatSetpoint,\n                \"minHeatSetpoint\": therm.minHeatSetpoint,\n                \"maxHeatSetpoint\": therm.maxHeatSetpoint,\n                \"minCoolSetpoint\": therm.minCoolSetpoint,\n                \"maxCoolSetpoint\": therm.maxCoolSetpoint,\n            },\n        };\n        context.global.getWinkState(LyricTherm);\n        \n        if (!('winkDevCap' in context.global)) context.global.winkDevCap={};\n        context.global.winkDevCap[therm.name]=therm.capabilities;\n     \n    });//for each therm\n}\n\nvar msgs = [];\nfor (var i = 0; i< msg.payload.length; i++) {\n  msgs.push({payload: msg.payload[i]});\n}\n\nreturn msgs;\n",
    "outputs": 1,
    "noerr": 0,
    "x": 611.8959350585938,
    "y": 643.8944667577744,
    "wires": [
      [
        "adb2dabb.fc5268",
        "e65d2803.dc6ca8",
        "26dbc5f2.589bea",
        "ea8f0546.a86888"
      ]
    ]
  },
  {
    "id": "adb2dabb.fc5268",
    "type": "change",
    "z": "54686246.278bfc",
    "name": "honeywellLyricDeviceID",
    "rules": [
      {
        "t": "set",
        "p": "honeywellLyricDeviceID",
        "pt": "global",
        "to": "payload.deviceID",
        "tot": "msg"
      },
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "honeywellLyricDeviceID",
        "tot": "global"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 915.8855972290039,
    "y": 644.3562870025635,
    "wires": [
      [
        "59e771a7.d20c1"
      ]
    ]
  },
  {
    "id": "3efde37.f79801c",
    "type": "debug",
    "z": "54686246.278bfc",
    "name": "",
    "active": false,
    "console": "false",
    "complete": "true",
    "x": 1252.5641555786133,
    "y": 499.3775758743286,
    "wires": []
  },
  {
    "id": "3c3efd1f.f5d2a2",
    "type": "inject",
    "z": "54686246.278bfc",
    "name": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "repeat": "",
    "crontab": "",
    "once": true,
    "x": 386.8958435058594,
    "y": 357.8888969421387,
    "wires": [
      [
        "d9b361e8.094fc",
        "e61c6e12.745d2"
      ]
    ]
  },
  {
    "id": "d9b361e8.094fc",
    "type": "function",
    "z": "54686246.278bfc",
    "name": "Define Globals / executeLyricTstatCMD",
    "func": "// Honeywell Lyric\n\nif (typeof context.global.honeywellAPIKey==='undefined' )\n{\n    context.global.honeywellAPIKey = \"\";\n}\nif (typeof context.global.honeywellConsumerSecert==='undefined' )\n{\n    context.global.honeywellConsumerSecert = \"\";\n}\n\nif (typeof context.global.honeywellLyricRefreshToken==='undefined' )\n{\n    context.global.honeywellLyricRefreshToken = \"\";\n}\nif (typeof context.global.honeywellAPIcode==='undefined' )\n{\n    context.global.honeywellAPIcode = \"\";\n}\nif (typeof context.global.honeywellOauth2Token==='undefined' )\n{\n    context.global.honeywellOauth2Token = \"\";\n}\nif (typeof context.global.honeywellLyricAccessToken==='undefined' )\n{\n    context.global.honeywellLyricAccessToken = \"\";\n}\n\n\ncontext.global.honeywellLyricDeviceID = \"\";\ncontext.global.honeywellLyricLocationID = \"\";\ncontext.global.honeywellLyricName = \"\";\ncontext.global.changeableValues = {};\n\ncontext.global.executeLyricTstatCMD = function (lyricName,command,Param) {\n    var WinkCMDmsg = {};\n    if ('new_version' in context.global && context.global.new_version){ \n        var cmd = command.toLowerCase();\n        var xParam = (typeof Param === 'string' ? Param.toLowerCase() : Param);\n        node.warn(lyricName+' '+cmd+' '+xParam);\n        try {\n            if (lyricName in context.global.winkState.thermostats)\n            {\n                var devCapbs=context.global.winkDevCap[lyricName].fields || [];\n                //node.warn(devCapbs);\n                if (cmd != \"fan\"){\n                WinkCMDmsg ={\n                        \"url\":\"https://api.honeywell.com/v2/devices/thermostats/\"+context.global.honeywellLyricDeviceID+\"?apikey=\"+context.global.honeywellAPIKey+\"&locationId=\"+context.global.honeywellLyricLocationID,\n                    \"method\": \"POST\",\n                    headers: {\n                        \"Authorization\":\"Bearer \"+context.global.honeywellLyricAccessToken\n                    },\n                    //payload set in switch statement below\n                };\n                }\n                switch (cmd){\n                    case 'mode':\n                        if (devCapbs[context.global.searchArray(devCapbs,'mode','field')]!=-1 ){\n                            WinkCMDmsg.payload={\n                                \"mode\":xParam ,\n                                \"coolSetpoint\": context.global.winkState.thermostats[lyricName].cool_set_point,\n                                \"heatSetpoint\": context.global.winkState.thermostats[lyricName].heat_set_point,\n                                \"thermostatSetpointStatus\": \"PermanentHold\"\n                            };\n                        } else WinkCmd={};\n                    break;\n                    case 'temperature':\n                        WinkCMDmsg.payload={\n                            \"mode\":context.global.winkState.thermostats[lyricName].mode,\n                            \"coolSetpoint\": xParam,\n                            \"heatSetpoint\": xParam,//context.global.winkState.thermostats[lyricName].heat_set_point,\n                            \"thermostatSetpointStatus\": \"PermanentHold\"\n                        };\n                    break;\n                    case 'adjust':\n                        WinkCMDmsg.payload={\n                            \"mode\":context.global.winkState.thermostats[lyricName].mode,\n                            \"coolSetpoint\": (context.global.winkState.thermostats[lyricName].cool_set_point +xParam),\n                            \"heatSetpoint\": (context.global.winkState.thermostats[lyricName].heat_set_point +xParam),\n                            \"thermostatSetpointStatus\": \"PermanentHold\"\n                        };\n                    break;\n                    case 'fan':\n                        WinkCMDmsg ={\n                            \"url\":\"https://api.honeywell.com/v2/devices/thermostats/\"+context.global.honeywellLyricDeviceID+\"/fan?apikey=\"+context.global.honeywellAPIKey+\"&locationId=\"+context.global.honeywellLyricLocationID,\n                            \"method\": \"POST\",\n                            headers: {\n                                \"Authorization\":\"Bearer \"+context.global.honeywellLyricAccessToken\n                            },    \n                            payload:{\n                                \"mode\":xParam                            \n                            }};                          \n                    break;                     \n                    default:\n                    WinkCMDmsg={};    \n                }\n            }\n        }\n        catch (error){\n                node.warn('execute tStat CMD error: '+ error.message);\n        }        \n    }\n    return WinkCMDmsg;\n}",
    "outputs": 1,
    "noerr": 0,
    "x": 676.899299621582,
    "y": 358.26389503479004,
    "wires": [
      []
    ]
  },
  {
    "id": "29031557.54349a",
    "type": "http request",
    "z": "54686246.278bfc",
    "name": "",
    "method": "use",
    "ret": "txt",
    "url": "",
    "tls": "",
    "x": 1128.7627258300781,
    "y": 863.8888823986053,
    "wires": [
      [
        "3002a3af.84c4ac"
      ]
    ]
  },
  {
    "id": "313dfe3c.2a9812",
    "type": "function",
    "z": "54686246.278bfc",
    "name": "Set Thermostat",
    "func": "var thermostat = context.global.honeywellLyricName;\n//return context.global.executeLyricTstatCMD(thermostat,\"fan\",\"auto\");\n//return context.global.executeLyricTstatCMD(thermostat,\"temperature\",\"65\");\nreturn context.global.executeLyricTstatCMD(thermostat,\"mode\",\"cool\");\n",
    "outputs": 1,
    "noerr": 0,
    "x": 951.75927734375,
    "y": 863.9514770507812,
    "wires": [
      [
        "29031557.54349a"
      ]
    ]
  },
  {
    "id": "e4873053.807db",
    "type": "http request",
    "z": "54686246.278bfc",
    "name": "",
    "method": "use",
    "ret": "obj",
    "url": "",
    "tls": "",
    "x": 571.8182487487793,
    "y": 864.1390466690063,
    "wires": [
      [
        "53b02f1.3d8ccd"
      ]
    ]
  },
  {
    "id": "1a492933.236a17",
    "type": "function",
    "z": "54686246.278bfc",
    "name": "Request Acess Token",
    "func": "var LyricCMDmsg ={\n    \"url\":\"https://api.honeywell.com/oauth2/token\",\n    \"method\": \"POST\",\n    headers:\n    {\n        \"Authorization\":context.global.honeywellOauth2Token,\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n    },\n    payload:\n    {\n        \"grant_type\":\"refresh_token\",\n        \"refresh_token\":context.global.honeywellLyricRefreshToken\n    }\n};\n    node.send(LyricCMDmsg);\nreturn; ",
    "outputs": 1,
    "noerr": 0,
    "x": 372.8147277832031,
    "y": 864.2014207839966,
    "wires": [
      [
        "e4873053.807db"
      ]
    ]
  },
  {
    "id": "a829991a.742b18",
    "type": "inject",
    "z": "54686246.278bfc",
    "name": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "repeat": "",
    "crontab": "",
    "once": false,
    "x": 185.63639450073242,
    "y": 863.9179422855377,
    "wires": [
      [
        "1a492933.236a17"
      ]
    ]
  },
  {
    "id": "53b02f1.3d8ccd",
    "type": "change",
    "z": "54686246.278bfc",
    "name": "Set Access Token",
    "rules": [
      {
        "t": "set",
        "p": "honeywellLyricAccessToken",
        "pt": "global",
        "to": "payload.access_token",
        "tot": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 758.8182144165039,
    "y": 864.1388556957245,
    "wires": [
      [
        "313dfe3c.2a9812"
      ]
    ]
  },
  {
    "id": "3002a3af.84c4ac",
    "type": "debug",
    "z": "54686246.278bfc",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "true",
    "x": 1274.7037467956543,
    "y": 864.0138137340546,
    "wires": []
  },
  {
    "id": "26634646.07713a",
    "type": "http request",
    "z": "54686246.278bfc",
    "name": "",
    "method": "use",
    "ret": "obj",
    "url": "",
    "tls": "",
    "x": 1049.30810546875,
    "y": 1011.5858764648438,
    "wires": [
      [
        "4a540f8e.67379",
        "21ac0c27.5a3ac4",
        "216162ea.1746ee"
      ]
    ]
  },
  {
    "id": "483bf85b.fe2868",
    "type": "function",
    "z": "54686246.278bfc",
    "name": "Get Thermostat",
    "func": "LyricCMDmsg ={\n    \"url\":\"https://api.honeywell.com/v2/devices/thermostats/\"+context.global.honeywellLyricDeviceID+\"?apikey=\"+context.global.honeywellAPIKey+\"&locationId=\"+context.global.honeywellLyricLocationID,\n    \"method\": \"GET\",\n    headers:\n    {\n        \"Authorization\":\"Bearer \"+context.global.honeywellLyricAccessToken\n    }\n};\n    \nreturn LyricCMDmsg;\n",
    "outputs": 1,
    "noerr": 0,
    "x": 873.3047752380371,
    "y": 1010.6484031677246,
    "wires": [
      [
        "26634646.07713a"
      ]
    ]
  },
  {
    "id": "33753a1d.0a99e6",
    "type": "http request",
    "z": "54686246.278bfc",
    "name": "",
    "method": "use",
    "ret": "obj",
    "url": "",
    "tls": "",
    "x": 481.1819305419922,
    "y": 1011.7449836730957,
    "wires": [
      [
        "f60bfe4.39904"
      ]
    ]
  },
  {
    "id": "8e4abcc1.8722c",
    "type": "function",
    "z": "54686246.278bfc",
    "name": "Request Acess Token",
    "func": "var LyricCMDmsg ={\n    \"url\":\"https://api.honeywell.com/oauth2/token\",\n    \"method\": \"POST\",\n    headers:\n    {\n        \"Authorization\":context.global.honeywellOauth2Token,\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n    },\n    payload:\n    {\n        \"grant_type\":\"refresh_token\",\n        \"refresh_token\":context.global.honeywellLyricRefreshToken\n    }\n};\n    node.send(LyricCMDmsg);\nreturn; ",
    "outputs": 1,
    "noerr": 0,
    "x": 282.178409576416,
    "y": 1011.8073577880859,
    "wires": [
      [
        "33753a1d.0a99e6"
      ]
    ]
  },
  {
    "id": "8816eda0.8fee5",
    "type": "inject",
    "z": "54686246.278bfc",
    "name": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "repeat": "",
    "crontab": "",
    "once": false,
    "x": 96.72735595703125,
    "y": 1011.6147224903107,
    "wires": [
      [
        "8e4abcc1.8722c"
      ]
    ]
  },
  {
    "id": "f60bfe4.39904",
    "type": "change",
    "z": "54686246.278bfc",
    "name": "Set Access Token",
    "rules": [
      {
        "t": "set",
        "p": "honeywellLyricAccessToken",
        "pt": "global",
        "to": "payload.access_token",
        "tot": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 672.3637008666992,
    "y": 1011.835780620575,
    "wires": [
      [
        "483bf85b.fe2868"
      ]
    ]
  },
  {
    "id": "4a540f8e.67379",
    "type": "debug",
    "z": "54686246.278bfc",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "payload",
    "x": 1230.2491607666016,
    "y": 1011.7107944488525,
    "wires": []
  },
  {
    "id": "21ac0c27.5a3ac4",
    "type": "change",
    "z": "54686246.278bfc",
    "name": "changeableValues",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "payload.changeableValues",
        "tot": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1248.9175033569336,
    "y": 1048.9104480743408,
    "wires": [
      [
        "4edfe5d2.7e914c"
      ]
    ]
  },
  {
    "id": "37fc4287.c3c61e",
    "type": "debug",
    "z": "54686246.278bfc",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "payload",
    "x": 1562.4411849975586,
    "y": 1047.4950428009033,
    "wires": []
  },
  {
    "id": "4edfe5d2.7e914c",
    "type": "change",
    "z": "54686246.278bfc",
    "name": "mode",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "payload.mode",
        "tot": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1410.3720321655273,
    "y": 1048.092393875122,
    "wires": [
      [
        "37fc4287.c3c61e"
      ]
    ]
  },
  {
    "id": "6741a424.4c2e5c",
    "type": "debug",
    "z": "54686246.278bfc",
    "name": "",
    "active": false,
    "console": "false",
    "complete": "payload",
    "x": 859.8049392700195,
    "y": 427.0707197189331,
    "wires": []
  },
  {
    "id": "e4fd1374.c6fb4",
    "type": "change",
    "z": "54686246.278bfc",
    "name": "honeywellLyricLocationID",
    "rules": [
      {
        "t": "set",
        "p": "honeywellLyricLocationID",
        "pt": "global",
        "to": "payload.locationID",
        "tot": "msg"
      },
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "honeywellLyricLocationID",
        "tot": "global"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 524.8048629760742,
    "y": 572.0707731246948,
    "wires": [
      [
        "6d7dcf99.b2cd8"
      ]
    ]
  },
  {
    "id": "c8cb3873.4a2c98",
    "type": "debug",
    "z": "54686246.278bfc",
    "name": "",
    "active": false,
    "console": "false",
    "complete": "payload",
    "x": 1169.8048706054688,
    "y": 571.0707111358643,
    "wires": []
  },
  {
    "id": "13244dd5.6b9192",
    "type": "function",
    "z": "54686246.278bfc",
    "name": "Parse payload",
    "func": "var msgs = [];\nfor (var i = 0; i< msg.payload.length; i++) {\n  msgs.push({payload: msg.payload[i]});\n}\n\nreturn msgs;",
    "outputs": 1,
    "noerr": 0,
    "x": 1071.7459182739258,
    "y": 500.5429353713989,
    "wires": [
      [
        "e4fd1374.c6fb4",
        "3efde37.f79801c"
      ]
    ]
  },
  {
    "id": "55a33a32.b668d4",
    "type": "http request",
    "z": "54686246.278bfc",
    "name": "",
    "method": "use",
    "ret": "obj",
    "url": "",
    "tls": "",
    "x": 954.8048553466797,
    "y": 572.0707025527954,
    "wires": [
      [
        "c8cb3873.4a2c98",
        "a0522e81.f39b5"
      ]
    ]
  },
  {
    "id": "6d7dcf99.b2cd8",
    "type": "function",
    "z": "54686246.278bfc",
    "name": "Get Devices",
    "func": "LyricCMDmsg ={\n    \"url\":\"https://api.honeywell.com/v2/devices/thermostats?apikey=\"+context.global.honeywellAPIKey+\"&locationId=\"+context.global.honeywellLyricLocationID,\n    \"method\": \"GET\",\n    headers:\n    {\n        \"Authorization\":\"Bearer \"+context.global.honeywellLyricAccessToken\n    }\n};\n    \nreturn LyricCMDmsg;\n\n//\"url\":\"https://api.honeywell.com/v2/devices/thermostats?apikey=8bFYM0sl5YI7SyYgzz4Qv7IqqBUq19Do&locationId=138889\",",
    "outputs": 1,
    "noerr": 0,
    "x": 760.8014526367188,
    "y": 572.1333150863647,
    "wires": [
      [
        "55a33a32.b668d4"
      ]
    ]
  },
  {
    "id": "59e771a7.d20c1",
    "type": "debug",
    "z": "54686246.278bfc",
    "name": "",
    "active": false,
    "console": "false",
    "complete": "payload",
    "x": 1135.3597793579102,
    "y": 679.191915512085,
    "wires": []
  },
  {
    "id": "e65d2803.dc6ca8",
    "type": "change",
    "z": "54686246.278bfc",
    "name": "changeableValues",
    "rules": [
      {
        "t": "set",
        "p": "changeableValues",
        "pt": "global",
        "to": "payload.changeableValues",
        "tot": "msg"
      },
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "changeableValues",
        "tot": "global"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 896.2906188964844,
    "y": 678.7892198562622,
    "wires": [
      [
        "59e771a7.d20c1"
      ]
    ]
  },
  {
    "id": "26dbc5f2.589bea",
    "type": "change",
    "z": "54686246.278bfc",
    "name": "thermostat name",
    "rules": [
      {
        "t": "set",
        "p": "honeywellLyricName",
        "pt": "global",
        "to": "payload.name",
        "tot": "msg"
      },
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "honeywellLyricName",
        "tot": "global"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 897.9269714355469,
    "y": 713.3245820999146,
    "wires": [
      [
        "59e771a7.d20c1"
      ]
    ]
  },
  {
    "id": "9565d6eb.ac8058",
    "type": "http in",
    "z": "54686246.278bfc",
    "name": "",
    "url": "/red/honeywell",
    "method": "get",
    "swaggerDoc": "",
    "x": 116.8958511352539,
    "y": 84.888916015625,
    "wires": [
      [
        "92fff49e.2d99c8"
      ]
    ]
  },
  {
    "id": "92fff49e.2d99c8",
    "type": "function",
    "z": "54686246.278bfc",
    "name": "Get an Authorization Code",
    "func": "return msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 354.89581298828125,
    "y": 84.88885498046875,
    "wires": [
      [
        "488fc8f.0a6a438",
        "427aa0ac.ce75f"
      ]
    ]
  },
  {
    "id": "488fc8f.0a6a438",
    "type": "http response",
    "z": "54686246.278bfc",
    "name": "",
    "x": 580.8958435058594,
    "y": 84.888916015625,
    "wires": []
  },
  {
    "id": "2609a89f.488968",
    "type": "debug",
    "z": "54686246.278bfc",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "payload",
    "x": 396.895751953125,
    "y": 189.88885498046875,
    "wires": []
  },
  {
    "id": "ea8f0546.a86888",
    "type": "change",
    "z": "54686246.278bfc",
    "name": "indoorTemperature",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "payload.indoorTemperature",
        "tot": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 895.8957824707031,
    "y": 751.8888788223267,
    "wires": [
      [
        "331df504.407f6a"
      ]
    ]
  },
  {
    "id": "331df504.407f6a",
    "type": "debug",
    "z": "54686246.278bfc",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "payload",
    "x": 1102.8957214355469,
    "y": 751.8888788223267,
    "wires": []
  },
  {
    "id": "216162ea.1746ee",
    "type": "change",
    "z": "54686246.278bfc",
    "name": "operationStatus",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "payload.operationStatus",
        "tot": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1240.930809020996,
    "y": 973.5973377227783,
    "wires": [
      [
        "9a3d0f59.afe53"
      ]
    ]
  },
  {
    "id": "15f5070a.f062a9",
    "type": "debug",
    "z": "54686246.278bfc",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "payload",
    "x": 1536.0000228881836,
    "y": 973.9999866485596,
    "wires": []
  },
  {
    "id": "9a3d0f59.afe53",
    "type": "change",
    "z": "54686246.278bfc",
    "name": "mode",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "payload.mode",
        "tot": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1392.930809020996,
    "y": 973.5973377227783,
    "wires": [
      [
        "15f5070a.f062a9"
      ]
    ]
  },
  {
    "id": "427aa0ac.ce75f",
    "type": "change",
    "z": "54686246.278bfc",
    "name": "honeywellAPIcode",
    "rules": [
      {
        "t": "set",
        "p": "honeywellAPIcode",
        "pt": "global",
        "to": "payload.code",
        "tot": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 198,
    "y": 144,
    "wires": [
      [
        "2609a89f.488968",
        "9bb3e7d8.fd6668"
      ]
    ]
  },
  {
    "id": "9bb3e7d8.fd6668",
    "type": "function",
    "z": "54686246.278bfc",
    "name": "Create a Token from an Authorization Code",
    "func": "var b = new Buffer(context.global.honeywellAPIKey+\":\"+context.global.honeywellConsumerSecert);\nmsg.payload = b.toString('base64');\ncontext.global.honeywellOauth2Token = msg.payload\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 490,
    "y": 145,
    "wires": [
      [
        "86a06034.bdab1"
      ]
    ]
  },
  {
    "id": "9f81707e.56c93",
    "type": "http request",
    "z": "54686246.278bfc",
    "name": "",
    "method": "use",
    "ret": "obj",
    "url": "",
    "tls": "",
    "x": 973,
    "y": 145,
    "wires": [
      [
        "beeb2914.ac7348",
        "d07dc17.ecffe4"
      ]
    ]
  },
  {
    "id": "86a06034.bdab1",
    "type": "function",
    "z": "54686246.278bfc",
    "name": "Request Acess Token",
    "func": "context.global.BlueMixUrlBase = context.global.BlueMixUrlBase.toLowerCase();\nvar LyricCMDmsg ={\n    \"url\":\"https://api.honeywell.com/oauth2/token\",\n    \"method\": \"POST\",\n    headers:\n    {\n        \"Authorization\":context.global.honeywellOauth2Token,\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n    },\n    payload:\n    {\n        \"grant_type\":\"authorization_code\",\n        \"code\":context.global.honeywellAPIcode,\n        \"redirect_uri\":context.global.BlueMixUrlBase+'/red/honeywell'\n    }\n};\n    node.send(LyricCMDmsg);\nreturn; ",
    "outputs": 1,
    "noerr": 0,
    "x": 781.9964599609375,
    "y": 145.0623779296875,
    "wires": [
      [
        "9f81707e.56c93"
      ]
    ]
  },
  {
    "id": "beeb2914.ac7348",
    "type": "debug",
    "z": "54686246.278bfc",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "payload",
    "x": 1165.9444580078125,
    "y": 145.74978637695312,
    "wires": []
  },
  {
    "id": "d07dc17.ecffe4",
    "type": "change",
    "z": "54686246.278bfc",
    "name": "Set honeywellLyricRefreshToken",
    "rules": [
      {
        "t": "set",
        "p": "honeywellLyricRefreshToken",
        "pt": "global",
        "to": "payload.refresh_token",
        "tot": "msg"
      },
      {
        "t": "set",
        "p": "honeywellLyricAccessToken",
        "pt": "global",
        "to": "payload.access_token",
        "tot": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1012,
    "y": 196,
    "wires": [
      []
    ]
  },
  {
    "id": "9ed163da.24d4c",
    "type": "comment",
    "z": "54686246.278bfc",
    "name": "API Access Authentication Flow",
    "info": "",
    "x": 164,
    "y": 27,
    "wires": []
  },
  {
    "id": "4f0c7aff.dede14",
    "type": "comment",
    "z": "54686246.278bfc",
    "name": "Device Access and Integration Flow",
    "info": "",
    "x": 190,
    "y": 309,
    "wires": []
  },
  {
    "id": "4a12bcc9.1f3ce4",
    "type": "comment",
    "z": "54686246.278bfc",
    "name": "Sample Flow for setting device data",
    "info": "",
    "x": 175,
    "y": 792,
    "wires": []
  },
  {
    "id": "abc770e3.073c",
    "type": "comment",
    "z": "54686246.278bfc",
    "name": "Sample Flow for getting device data",
    "info": "",
    "x": 145,
    "y": 955,
    "wires": []
  }
]

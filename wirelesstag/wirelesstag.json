[
  {
    "id": "f438b251.f089f",
    "type": "debug",
    "z": "1496d6fa.a7f5a9",
    "name": "",
    "active": false,
    "console": "false",
    "complete": "payload",
    "x": 798,
    "y": 222,
    "wires": []
  },
  {
    "id": "232fad78.3b37d2",
    "type": "http in",
    "z": "1496d6fa.a7f5a9",
    "name": "",
    "url": "/red/wirelesstag",
    "method": "post",
    "swaggerDoc": "",
    "x": 206,
    "y": 133,
    "wires": [
      [
        "1a4405ac.84162a",
        "176c5444.b1033c",
        "21d81857.797b38"
      ]
    ]
  },
  {
    "id": "1a4405ac.84162a",
    "type": "debug",
    "z": "1496d6fa.a7f5a9",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "payload",
    "x": 469,
    "y": 133,
    "wires": []
  },
  {
    "id": "176c5444.b1033c",
    "type": "function",
    "z": "1496d6fa.a7f5a9",
    "name": "",
    "func": "msg.statusCode=200;\nmsg.payload=[]\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 451,
    "y": 95,
    "wires": [
      [
        "1f353246.26b26e"
      ]
    ]
  },
  {
    "id": "1f353246.26b26e",
    "type": "http response",
    "z": "1496d6fa.a7f5a9",
    "name": "",
    "x": 576,
    "y": 95,
    "wires": []
  },
  {
    "id": "21d81857.797b38",
    "type": "delay",
    "z": "1496d6fa.a7f5a9",
    "name": "",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "x": 465,
    "y": 177,
    "wires": [
      [
        "c1aa70f4.d0bad"
      ]
    ]
  },
  {
    "id": "b93ef59d.7eae58",
    "type": "catch",
    "z": "1496d6fa.a7f5a9",
    "name": "",
    "x": 166,
    "y": 361,
    "wires": [
      [
        "fc2ab94e.e9f2f8"
      ]
    ]
  },
  {
    "id": "fc2ab94e.e9f2f8",
    "type": "debug",
    "z": "1496d6fa.a7f5a9",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "error",
    "x": 366,
    "y": 361,
    "wires": []
  },
  {
    "id": "c1aa70f4.d0bad",
    "type": "function",
    "z": "1496d6fa.a7f5a9",
    "name": "",
    "func": "function roundUsing(func, number, prec) {\n    var tempnumber = number * Math.pow(10, prec);\n    tempnumber = func(tempnumber);\n    return tempnumber / Math.pow(10, prec);\n}\n\nfunction setDeviceCapabilities(device,capabilities){\n    var capbExists=false;\n    var newCapb={};\n    newCapb.fields=[];\n    \n    if (device in context.global.winkDevCap &&  'fields' in context.global.winkDevCap[device]) {\n        for (var i=0;i<context.global.winkDevCap[device].fields.length;i++ ) {\n                r=context.global.winkDevCap[device].fields[i];\n                newCapb.fields.push(r);\n        }\n    }\n    for (var capa in capabilities.caps){\n        c = capabilities.caps[capa];\n        capbExists=false;\n            for (var k=0;k<newCapb.fields.length;k++ ) {\n                r=newCapb.fields[k];\n                if (r.field == c.capb){\n                    capbExists=true;\n                    break;\n                }\n            }\n        if (!capbExists) {\n            newCapb.fields.push({\n                field:c.capb, type: c.type  \n            });\n        }\n    }\n    return newCapb;\n}\n\nif (msg.payload.APIKEY==context.global.IFTTT_TOKEN){\n    var wt_msg= {\n        url:context.global.BlueMixUrlBase+'/red/wink/subscribtions',\n        method:\"POST\",\n        payload: {\n            device_manufacturer: 'Wirelesstag',\n            eco_system : 'Wirelesstag',\n            last_reading: {},\n            manufacturer_device_model: 'Wirelesstag_'+msg.payload.name+'_sensor',\n            model_name:'Wirelesstag Sensor', \n            name:msg.payload.name,\n            object_id:msg.payload.uuid,\n            object_type: 'sensor_pod',\n            radio_type: 'wifi',\n            sensor_pod_id:msg.payload.uuid,\n            triggers: [],\n            units: {},\n            upc_code:msg.payload.name,\n            upc_id:msg.payload.uuid\n        }\n    };\n    var deviceCapabilities={};\n    deviceCapabilities.caps=[];\n    if (msg.payload.temperature !== 0) {\n        wt_msg.payload.last_reading.temperature = msg.payload.temperature.toFixed(2);\n        deviceCapabilities.caps.push({\n            capb:'temperature', type:'float'\n        });\n    }\n    if (msg.payload.moisture !== 0) {\n        wt_msg.payload.last_reading.humidity = (msg.payload.moisture/100).toFixed(2);\n        deviceCapabilities.caps.push({\n            capb:'humidity', type:'percentage'\n        });\n    }\n    if (msg.payload.batteryVolt !== 0) {\n        var batt = (msg.payload.batteryVolt / 3.2).toFixed(2);\n        wt_msg.payload.last_reading.battery = batt > 1 ? 1 : batt;\n        deviceCapabilities.caps.push({\n            capb:'battery', type:'percentage'\n        });\n    }\n    if (msg.payload.angleX !== 0) {\n        wt_msg.payload.last_reading.angleX = msg.payload.angleX;\n        deviceCapabilities.caps.push({\n            capb:'angleX', type:'short'\n        });\n    }\n    if (msg.payload.angleY !== 0) {\n        wt_msg.payload.last_reading.angleY = msg.payload.angleY;\n        deviceCapabilities.caps.push({\n            capb:'angleY', type:'short'\n        });\n    }\n    if (msg.payload.angleZ !== 0) {\n        wt_msg.payload.last_reading.angleZ = msg.payload.angleZ;\n        deviceCapabilities.caps.push({\n            capb:'angleZ', type:'short'\n        });\n    }\n    if (msg.payload.lux !== 0) {\n        wt_msg.payload.last_reading.illuminance = msg.payload.lux.toFixed(1);\n        deviceCapabilities.caps.push({\n            capb:'illuminance', type:'float'\n        });\n    }\n    if (msg.payload.hasMoved === true) {\n        wt_msg.payload.last_reading.motion = true;\n        deviceCapabilities.caps.push({\n            capb:'motion', type:'boolean'\n        });\n    }\n    if (msg.payload.hasMoved === false) {\n        wt_msg.payload.last_reading.motion = false;\n        deviceCapabilities.caps.push({\n            capb:'motion', type:'boolean'\n        });\n    }\n    if (msg.payload.eventState == 5) {\n        wt_msg.payload.last_reading.motion =true;\n        deviceCapabilities.caps.push({\n            capb:'motion', type:'boolean'\n        });\n    }\n    if (msg.payload.eventState == 6) {\n        wt_msg.payload.last_reading.motion = false;\n        deviceCapabilities.caps.push({\n            capb:'motion', type:'boolean'\n        });\n    }\n    wt_msg.payload.capabilities = setDeviceCapabilities(msg.payload.name,deviceCapabilities);\n    return(wt_msg);\n} else {\n    node.warn('incorrect API key used by Wirelesstag');\n}",
    "outputs": "1",
    "noerr": 0,
    "x": 623,
    "y": 177,
    "wires": [
      [
        "f438b251.f089f",
        "2634a7c.cccbd58"
      ]
    ]
  },
  {
    "id": "2634a7c.cccbd58",
    "type": "http request",
    "z": "1496d6fa.a7f5a9",
    "name": "",
    "method": "use",
    "ret": "txt",
    "url": "",
    "x": 798,
    "y": 177,
    "wires": [
      [
        "397443f9.23244c"
      ]
    ]
  },
  {
    "id": "397443f9.23244c",
    "type": "debug",
    "z": "1496d6fa.a7f5a9",
    "name": "",
    "active": false,
    "console": "false",
    "complete": "false",
    "x": 976,
    "y": 177,
    "wires": []
  }
]
